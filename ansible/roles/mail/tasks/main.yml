---
###############################################################################
# Shell mail

- name: mail | Check mandatory variables are defined | assert
  assert:
    that:
      - "{{ ahs_var }} is defined"
      - "{{ ahs_var }} | length > 0"
      - "{{ ahs_var }} != None"
    fail_msg: "{{ ahs_var }} needs to be set for the role to work"
    success_msg: "Required variable {{ ahs_var }} is defined"
  loop_control:
    loop_var: ahs_var
  with_items:
    - mail_name
    - mail_relay_host
    - mail_smtp_app_key

- name: mail | Configure postfix mailname | debconf
  become: yes
  debconf:
    name: postfix
    question: postfix/mailname
    value: "{{ mail_name }}"
    vtype: string

- name: mail | Configure postfix mailer type | debconf
  become: yes
  debconf:
    name: postfix
    question: postfix/main_mailer_type
    value: "Satellite system"
    vtype: select

- name: mail | Configure postfix relay host | debconf
  become: yes
  debconf:
    name: postfix
    question: postfix/relayhost
    value: "{{ mail_relay_host }}"
    vtype: string

- name: mail | Install packages | apt
  become: yes
  loop: "{{ mail_packages }}"
  apt:
    name: "{{ item }}"
    state: present

- name: mail | Copy postfix configuration | template
  become: yes
  template:
    src: "main.cf.j2"
    dest: "/etc/postfix/main.cf"
    backup: yes

- name: mail | Copy smtp relay configuration | template
  become: yes
  template:
    src: "relay_passwd.j2"
    dest: "/etc/postfix/sasl/relay_passwd"
    backup: yes

- name: mail | Generate postfix credential files | shell
  become: yes
  shell: "postmap /etc/postfix/sasl/relay_passwd"
  
- name: mail | Secure postfix credential files | file
  become: yes
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: '0400'
  with_items:
    - /etc/postfix/sasl/relay_passwd
    - /etc/postfix/sasl/relay_passwd.db

- name: mail | Restart postfix service | service
  become: yes
  service:
    name: postfix
    state: restarted

- name: mail | Create mutt config directory | file
  file:
    path: "{{ dotfiles_config_root }}/mutt"
    state: directory

- name: mail | Copy mutt configuration | template
  template:
    src: "muttrc.j2"
    dest: "{{ dotfiles_config_root }}/mutt/.muttrc"
    force: yes